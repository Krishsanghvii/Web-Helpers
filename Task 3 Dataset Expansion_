{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"14mCUyqMtq5bsTw3r11Cbk-RvJPCvryWm","timestamp":1690729853168}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["According to the research carried out by myself, I have found few techniques which are used for data augmentation. Data augmentation is a common technique used in machine learning and deep learning to artificially increase the diversity and size of a dataset. This can be beneficial for improving model performance, generalization, and reducing overfitting.\n","\n","Given below are few data augmentation techniques:\n","\n","Image Augmentation:\n","\n","Horizontal Flipping: Flipping the image horizontally, which is particularly useful for tasks where the orientation doesn't matter.\n","\n","Vertical Flipping: Similar to horizontal flipping, but the image is flipped vertically.\n","\n","Random Rotation: Rotating the image by a random angle to add rotational invariance.\n","\n","Random Cropping: Randomly cropping a portion of the image to focus on different regions.\n","\n","Scaling and Resizing: Resizing the image to different dimensions or scaling it up or down.\n","\n","Shearing: Introducing shear transformations to the image.\n","\n","Color Jittering: Modifying the color channels of the image (brightness, contrast, saturation) to change its appearance.\n","\n","Gaussian Noise: Adding random Gaussian noise to the image to make it robust to noise.\n","\n","Word-level Replacement/Synonyms*: This technique involves replacing certain words in the text with their synonyms to create new variations of the original text. It can be useful for introducing lexical variations without changing the overall meaning of the sentences. The code provided earlier demonstrates how to perform word-level replacement using synonyms from the WordNet lexicon.\n","\n","Text Augmentation:\n","\n","Synonym Replacement: Replacing words with their synonyms to create variations in the text.\n","\n","Random Insertion/Deletion: Randomly inserting or deleting words in a sentence.\n","\n","Text Masking: Masking out certain words or tokens in the text to force the model to learn from the context.\n","\n","Shuffling: Randomly shuffling the order of words in a sentence.\n","\n","Back-Translation: Translating the text to another language and then translating it back to the original language to create paraphrases.\n","\n","Audio Augmentation:\n","\n","Time Stretching: Stretching or compressing the audio signal in time.\n","\n","Pitch Shift: Changing the pitch of the audio without changing its duration.\n","\n","Noise Injection: Adding random noise to the audio signal.\n","\n","Time and Frequency Masking: Temporarily masking random time or frequency segments of the audio.\n","\n","Tabular Data Augmentation:\n","\n","Random Noise: Adding random noise to the numerical features to increase robustness.\n","\n","Value Imputation: Imputing missing values using different strategies like mean, median, or regression-based imputation.\n","\n","Feature Scaling: Scaling numerical features to a common range (e.g., normalization or standardization). Time Series Data Augmentation:\n","\n","Time Warping: Warping the time axis of the time series.\n","\n","Value Imputation: Imputing missing values in time series using interpolation or other methods.\n","\n","Data Smoothing: Applying moving average or other smoothing techniques to the time series.\n","\n"],"metadata":{"id":"L7Jy0v82WJY4"}},{"cell_type":"markdown","source":["**---------------------------------------------------------------------------------------------------------------------------------------------------------**\n"],"metadata":{"id":"0hIo74PdWxpt"}},{"cell_type":"markdown","source":["From all the above techniques, I feel **Word-level Replacement/Synonyms** is the best method to use.\n","\n","The uniqueness and significance of this method lie in the following aspects:\n","\n","Word-Level Data Augmentation: The code employs a word-level data augmentation approach using synonyms. It replaces words in the text with their synonyms, thereby creating new variations of the original reviews. This method is valuable for text data as it retains the overall semantics while introducing lexical diversity.\n","\n","Word Synonyms with NLTK: The code utilizes the Natural Language Toolkit (NLTK) library to access WordNet, a lexical database. NLTK provides a function (get_synonyms) to retrieve synonyms for words. Leveraging WordNet enhances the quality of synonyms used in data augmentation.\n","\n","Iterative Augmentation: The code iterates through each row of the DataFrame and applies the data augmentation technique to each review text. This iteration allows multiple augmented samples to be generated for each review, increasing the dataset size significantly.\n"],"metadata":{"id":"08oQcCJEW-bt"}},{"cell_type":"markdown","source":["\n","\n","*The code below is being applied on the amazon reviews dataset that we scrapped earlier.*\n"],"metadata":{"id":"3eKeoSi1Xskb"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xxPeu9CDQVPk","executionInfo":{"status":"ok","timestamp":1690627614407,"user_tz":-330,"elapsed":4220,"user":{"displayName":"ROHIT RAMESH WAHWAL","userId":"06217785169785881136"}},"outputId":"76563668-8c58-4b1a-f24f-3e5064f6b493"},"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n","[nltk_data] Downloading package wordnet to /root/nltk_data...\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":1}],"source":["import pandas as pd\n","import random\n","import nltk\n","from nltk.corpus import wordnet\n","from nltk.tokenize import word_tokenize\n","\n","nltk.download('punkt')\n","nltk.download('wordnet')\n"]},{"cell_type":"code","source":["\n","def get_synonyms(word):\n","    synonyms = set()\n","    for syn in wordnet.synsets(word):\n","        for lemma in syn.lemmas():\n","            synonyms.add(lemma.name().replace(\"_\", \" \"))\n","    return list(synonyms)\n","\n","def data_augmentation(review, num_augmented_samples=5):\n","    augmented_reviews = []\n","    tokens = word_tokenize(review)\n","\n","    for _ in range(num_augmented_samples):\n","        augmented_tokens = []\n","        for token in tokens:\n","            # Get synonyms for the token\n","            synonyms = get_synonyms(token)\n","            if synonyms:\n","                # Replace the token with a random synonym\n","                augmented_tokens.append(random.choice(synonyms))\n","            else:\n","                augmented_tokens.append(token)\n","\n","        # Reconstruct the augmented review\n","        augmented_review = \" \".join(augmented_tokens)\n","        augmented_reviews.append(augmented_review)\n","\n","    return augmented_reviews\n"],"metadata":{"id":"8KcY7tswQet9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","# # Sample DataFrame with your columns\n","# data = {\n","#     'reviewerID': ['A2IBPI20UZIR0U', 'A14VAT5EAX3D9S', 'A195EZSQDW3E21', 'A2C00NNG1ZQQG2'],\n","#     'overall': [5, 5, 5, 5],\n","#     'reviews': [\n","#         \"not much to write but exactly what was supposed to. filters out the pops and sounds on recordings. very crisp. one of the lowest prices for pop filters on amazon. might as well buy this one. honestly, it works. despite the pricing.\",\n","#         \"product is exactly what I wanted and quite affordable. I did not realize it was double-screened, but it arrived even better than expected. As an added bonus, one of the screens carries a small hint of the smell of old grape candy I used to buy, reminiscent of old times. For the sake of nostalgia, I cannot stop putting this pop filter next to my nose and smelling it while recording. If you ever needed a pop filter, this will work well. Even if you have more expensive ones, they may not even come with such a pleasing aroma like mine did. Buy this product! - Jake\",\n","#         \"The primary job of this device is to block the breaths that would otherwise produce popping sounds, allowing only the voice to pass. There is no noticeable reduction in volume or high frequencies. The double cloth filter blocks out the pops and lets the voice through without any coloration. The metal clamp mount attaches to a mic stand and is secure enough to keep it attached. The goose neck needs a little coaxing to stay put, but it does its job well.\",\n","#         \"This is a nice windscreen that protects my MXL mic. It prevents pops and things. The gooseneck is marginally able to hold the screen in position and requires careful positioning of the clamp to avoid sagging. Overall, a good windscreen for the money.\"\n","#     ],\n","#     'sentiment': ['Positive', 'Positive', 'Positive', 'Positive']\n","# }\n","# df = pd.DataFrame(data)\n","\n","df = pd.read_csv('cleaned.csv')\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"mCEUrh14RPzh","executionInfo":{"status":"ok","timestamp":1690628022428,"user_tz":-330,"elapsed":1052,"user":{"displayName":"ROHIT RAMESH WAHWAL","userId":"06217785169785881136"}},"outputId":"42b59ade-2388-46f7-a5be-8c30a6f0986d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           reviewerID  overall  \\\n","0      A2IBPI20UZIR0U        5   \n","1      A14VAT5EAX3D9S        5   \n","2      A195EZSQDW3E21        5   \n","3      A2C00NNG1ZQQG2        5   \n","4       A94QU4C90B1AX        5   \n","...               ...      ...   \n","10256  A14B2YH83ZXMPP        5   \n","10257   A1RPTVW5VEOSI        5   \n","10258   AWCJ12KBO5VII        4   \n","10259  A2Z7S8B5U4PAKJ        4   \n","10260  A2WA8TDCTGUADI        4   \n","\n","                                                 reviews sentiment  \n","0      not much write but exactly supposed filters po...  Positive  \n","1      product exactly quite affordablei not realized...  Positive  \n","2      primary job device block breath would otherwis...  Positive  \n","3      nice windscreen protects mxl mic prevents pops...  Positive  \n","4      pop filter great looks performs like studio fi...  Positive  \n","...                                                  ...       ...  \n","10256                 great expected thank allfive stars  Positive  \n","10257  ive thinking trying nanoweb strings but bit pu...  Positive  \n","10258  tried coated strings past including elixirs ne...  Positive  \n","10259  well made elixir developed taylor guitars stri...  Positive  \n","10260  strings really quite good but wouldnt call per...  Positive  \n","\n","[10261 rows x 4 columns]"],"text/html":["\n","\n","  <div id=\"df-f0f78a02-d68d-476c-b5c0-15598897c1ac\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>reviewerID</th>\n","      <th>overall</th>\n","      <th>reviews</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A2IBPI20UZIR0U</td>\n","      <td>5</td>\n","      <td>not much write but exactly supposed filters po...</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>A14VAT5EAX3D9S</td>\n","      <td>5</td>\n","      <td>product exactly quite affordablei not realized...</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>A195EZSQDW3E21</td>\n","      <td>5</td>\n","      <td>primary job device block breath would otherwis...</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>A2C00NNG1ZQQG2</td>\n","      <td>5</td>\n","      <td>nice windscreen protects mxl mic prevents pops...</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>A94QU4C90B1AX</td>\n","      <td>5</td>\n","      <td>pop filter great looks performs like studio fi...</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>10256</th>\n","      <td>A14B2YH83ZXMPP</td>\n","      <td>5</td>\n","      <td>great expected thank allfive stars</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>10257</th>\n","      <td>A1RPTVW5VEOSI</td>\n","      <td>5</td>\n","      <td>ive thinking trying nanoweb strings but bit pu...</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>10258</th>\n","      <td>AWCJ12KBO5VII</td>\n","      <td>4</td>\n","      <td>tried coated strings past including elixirs ne...</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>10259</th>\n","      <td>A2Z7S8B5U4PAKJ</td>\n","      <td>4</td>\n","      <td>well made elixir developed taylor guitars stri...</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>10260</th>\n","      <td>A2WA8TDCTGUADI</td>\n","      <td>4</td>\n","      <td>strings really quite good but wouldnt call per...</td>\n","      <td>Positive</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10261 rows × 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f0f78a02-d68d-476c-b5c0-15598897c1ac')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-50c1f94a-4c3c-4b69-98e0-71e437997fc0\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-50c1f94a-4c3c-4b69-98e0-71e437997fc0')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-50c1f94a-4c3c-4b69-98e0-71e437997fc0 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f0f78a02-d68d-476c-b5c0-15598897c1ac button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f0f78a02-d68d-476c-b5c0-15598897c1ac');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cJIZmnxUR_Vv","executionInfo":{"status":"ok","timestamp":1690628022432,"user_tz":-330,"elapsed":19,"user":{"displayName":"ROHIT RAMESH WAHWAL","userId":"06217785169785881136"}},"outputId":"44e02964-b810-47d8-df62-c19df0dab844"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10261, 4)"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["\n","# Apply data augmentation to all columns except the 'sentiment' column\n","num_augmented_samples = 3\n","augmented_data = []\n","\n","for _, row in df.iterrows():\n","    augmented_reviews = data_augmentation(row['reviews'], num_augmented_samples)\n","    for augmented_review in augmented_reviews:\n","        augmented_data.append({\n","            'reviewerID': row['reviewerID'],\n","            'overall': row['overall'],\n","            'reviews': augmented_review,\n","            'sentiment': row['sentiment']\n","        })\n","\n","# Create a new DataFrame with augmented data\n","new_df = pd.DataFrame(augmented_data)\n","\n","new_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"HsbmkYkgQhxs","executionInfo":{"status":"ok","timestamp":1690628082518,"user_tz":-330,"elapsed":59462,"user":{"displayName":"ROHIT RAMESH WAHWAL","userId":"06217785169785881136"}},"outputId":"57214e96-cbba-4a0c-b710-c6a4884f35c2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           reviewerID  overall  \\\n","0      A2IBPI20UZIR0U        5   \n","1      A2IBPI20UZIR0U        5   \n","2      A2IBPI20UZIR0U        5   \n","3      A14VAT5EAX3D9S        5   \n","4      A14VAT5EAX3D9S        5   \n","...               ...      ...   \n","30778  A2Z7S8B5U4PAKJ        4   \n","30779  A2Z7S8B5U4PAKJ        4   \n","30780  A2WA8TDCTGUADI        4   \n","30781  A2WA8TDCTGUADI        4   \n","30782  A2WA8TDCTGUADI        4   \n","\n","                                                 reviews sentiment  \n","0      not very much compose simply on the button so-...  Positive  \n","1      non much drop a line only incisively imagine p...  Positive  \n","2      not a great deal save only on the nose guess f...  Positive  \n","3      mathematical product on the dot quite a afford...  Positive  \n","4      ware just quite affordablei non agnize image s...  Positive  \n","...                                                  ...       ...  \n","30778  wellspring pee philosopher's stone originate T...  Positive  \n","30779  intimately reach philosopher's stone prepare E...  Positive  \n","30780  thread genuinely rather safe merely wouldnt ca...  Positive  \n","30781  cosmic string rattling quite a sound just woul...  Positive  \n","30782  strings actually rather dear merely wouldnt fo...  Positive  \n","\n","[30783 rows x 4 columns]"],"text/html":["\n","\n","  <div id=\"df-422f1a0d-6e05-47da-aff4-6ac836363198\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>reviewerID</th>\n","      <th>overall</th>\n","      <th>reviews</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>A2IBPI20UZIR0U</td>\n","      <td>5</td>\n","      <td>not very much compose simply on the button so-...</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>A2IBPI20UZIR0U</td>\n","      <td>5</td>\n","      <td>non much drop a line only incisively imagine p...</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>A2IBPI20UZIR0U</td>\n","      <td>5</td>\n","      <td>not a great deal save only on the nose guess f...</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>A14VAT5EAX3D9S</td>\n","      <td>5</td>\n","      <td>mathematical product on the dot quite a afford...</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>A14VAT5EAX3D9S</td>\n","      <td>5</td>\n","      <td>ware just quite affordablei non agnize image s...</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>30778</th>\n","      <td>A2Z7S8B5U4PAKJ</td>\n","      <td>4</td>\n","      <td>wellspring pee philosopher's stone originate T...</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>30779</th>\n","      <td>A2Z7S8B5U4PAKJ</td>\n","      <td>4</td>\n","      <td>intimately reach philosopher's stone prepare E...</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>30780</th>\n","      <td>A2WA8TDCTGUADI</td>\n","      <td>4</td>\n","      <td>thread genuinely rather safe merely wouldnt ca...</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>30781</th>\n","      <td>A2WA8TDCTGUADI</td>\n","      <td>4</td>\n","      <td>cosmic string rattling quite a sound just woul...</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>30782</th>\n","      <td>A2WA8TDCTGUADI</td>\n","      <td>4</td>\n","      <td>strings actually rather dear merely wouldnt fo...</td>\n","      <td>Positive</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>30783 rows × 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-422f1a0d-6e05-47da-aff4-6ac836363198')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-d750b812-287b-4f9c-bfbe-aa7e4949d30e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d750b812-287b-4f9c-bfbe-aa7e4949d30e')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-d750b812-287b-4f9c-bfbe-aa7e4949d30e button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-422f1a0d-6e05-47da-aff4-6ac836363198 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-422f1a0d-6e05-47da-aff4-6ac836363198');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["new_df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UsRLxDVQQn3T","executionInfo":{"status":"ok","timestamp":1690628082519,"user_tz":-330,"elapsed":13,"user":{"displayName":"ROHIT RAMESH WAHWAL","userId":"06217785169785881136"}},"outputId":"64e73138-2f33-4877-c75f-0a6ba5b79969"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(30783, 4)"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["As we can see earlier we had **10261** rows and after augmenting we have **30783** rows.\n","\n","Now we will concate the two dataframes to make one CSV."],"metadata":{"id":"TIMOWvoJX-9X"}},{"cell_type":"code","source":["merged_df = pd.concat([df, new_df], ignore_index=True)"],"metadata":{"id":"F27THWxXYV6i"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["merged_df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nNDGZs2ZYsBv","executionInfo":{"status":"ok","timestamp":1690629793263,"user_tz":-330,"elapsed":7,"user":{"displayName":"ROHIT RAMESH WAHWAL","userId":"06217785169785881136"}},"outputId":"f9e1cac8-822b-4ffd-c3e3-a6609a3b5146"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(41044, 4)"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["merged_df.to_csv('merged_data.csv', index=False)"],"metadata":{"id":"gNLJDezdYtpf"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["In summary, the code provides a straightforward and efficient implementation of word-level data augmentation using synonyms for text data. It is a valuable technique for enhancing the diversity of the dataset, improving model generalization, and mitigating overfitting. The combination of NLTK's WordNet and the pandas DataFrame makes it user-friendly and applicable to various text data scenarios."],"metadata":{"id":"e7MZNLlFY6yB"}},{"cell_type":"code","source":[],"metadata":{"id":"ytYT7mdbY7Yp"},"execution_count":null,"outputs":[]}]}